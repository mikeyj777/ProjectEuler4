# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

import math
import numpy as np
from datetime import datetime as dt

t0 = dt.now()

rt5 = math.sqrt(5)
phi_p = (1+rt5)/2
phi_n = (1-rt5)/2

def fib(n):
    return int((phi_p**n - phi_n**n) / rt5)


tot = 0
for n in range(1000000):
    fib_val = fib(n)
    if fib_val > 4e6:
        break
    if fib_val % 2 == 0:
        tot += fib_val

print(tot, dt.now() - t0)